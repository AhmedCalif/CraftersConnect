<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Create a New Project</title>
  <link rel="stylesheet" href="/projects.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
</head>
<body>
  <div class="container">
    <div class="card">
      <h1>Create a New Project</h1>
      <form id="projectForm" action="/projects/create" method="POST" enctype="multipart/form-data">
        <div class="createContainer">
          <input type="hidden" name="username" value="<%= username %>" />
          <input type="hidden" id="date" name="date">
          <input type="hidden" id="coverImageUrl" name="coverImageUrl">

          <label for="title"> Project Name</label>
          <input type="text" name="title" placeholder="What do you want to do?" required />

          <label for="description">About the Project</label>
          <input type="text" name="description" placeholder="What's it all about?" required />
        </div>

        <div id="stepsContainer">
          <div>
            <label for="step1">Step 1:</label>
            <button type="button" class="deleteStepBtn">Delete</button>
            <input type="text" id="step1" name="steps[]" data-id="1" required/>
          </div>
        </div>

        <div>
          <label for="coverImage">Cover Image:</label>
          <input type="file" id="coverImage" name="coverImage" accept="image/*">
        </div>

        <div class="action-buttons">
          <button type="button" id="addStepBtn">Add Step</button>
          <button type="submit">Create Project</button>
          <a href="/projects"><button type="button">Go Back</button></a>
        </div>
      </form>
    </div>
  </div>

  <script>
    document.getElementById("addStepBtn").addEventListener("click", function () {
      var stepsContainer = document.getElementById("stepsContainer");
      var newStepDiv = document.createElement("div");
      var firstStep = stepsContainer.firstElementChild.cloneNode(true);
      var stepNumber = stepsContainer.children.length + 1;
      firstStep.querySelector("label").textContent = "Step " + stepNumber + ":";
      var input = firstStep.querySelector("input");
      input.id = "step" + stepNumber;
      input.dataset.id = stepNumber;
      input.value = "";
      firstStep.querySelector(".deleteStepBtn").addEventListener("click", function () {
        if (stepsContainer.children.length > 1) {
          stepsContainer.removeChild(newStepDiv);
          updateStepNumbers();
        }
      });
      newStepDiv.appendChild(firstStep);
      stepsContainer.appendChild(newStepDiv);
    });

    function updateStepNumbers() {
      var stepsContainer = document.getElementById("stepsContainer");
      for (var i = 0; i < stepsContainer.children.length; i++) {
        var stepDiv = stepsContainer.children[i].firstElementChild;
        stepDiv.querySelector("label").textContent = "Step " + (i + 1) + ":";
        var input = stepDiv.querySelector("input");
        input.id = "step" + (i + 1);
        input.dataset.id = (i + 1);
      }
    }

    document.querySelector("form").addEventListener("submit", function (event) {
      const currentDate = new Date().toISOString();
      document.querySelector('#date').value = currentDate;
    });

    const form = document.getElementById('projectForm');
    const fileInput = document.getElementById('coverImage');

    fileInput.addEventListener('change', function() {
      if (this.files && this.files[0]) {
        let formData = new FormData();
        formData.append('coverImage', this.files[0]);

        fetch('/projects/upload-coverImage', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            document.getElementById('coverImageUrl').value = data.imageUrl;
            Swal.fire({
              icon: 'success',
              title: 'Cover image uploaded successfully!',
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Failed to upload cover image',
              text: 'Please try again later'
            });
            console.log('error', data.message)
          }
        })
        .catch(error => {
          Swal.fire({
            icon: 'error',
            title: 'Failed to upload cover image',
            text: error.message
          });
        });
      }
    });

    form.addEventListener('submit', function(event) {
      if (!fileInput.files.length || document.getElementById('coverImageUrl').value) {
        return;
      }
      event.preventDefault();
    });
  </script>
</body>
</html>
