<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Show Project</title>
  <link rel="stylesheet" href="/projects.css" />
</head>
<body>
  <div class="container">
    <div class="card">
      <div class="action-buttons">
        <a href="/my-projects">
          <button type="button">Back to My Projects</button>
        </a>
      </div>
      <h1>Project Details</h1>
      <div>
        <h2><%= project.title %></h2>
        <p><strong>Description:</strong> <%= project.description %></p>
        <p><strong>Date:</strong> <%= project.date %></p>
        <p><strong>Steps:</strong></p>
        <ul>
          <% if (project.Steps && project.Steps.length > 0) { %>
            <% project.Steps.forEach((step, index) => { %>
              <p><strong>Step <%= index + 1 %>:</strong></p>
              <p><%= step.description %></p>
            <% }); %>
          <% } else { %>
            <li>No steps available</li>
          <% } %>
        </ul>
        <% if (project.Images && project.Images.length > 0) { %>
          <p><strong>Cover Image:</strong></p>
          <img
            src="<%= project.Images[0].link %>"
            alt="Cover Image"
            style="max-width: 100%; height: auto"
          />
        <% } %>
        <% if (project.User && project.User.username === loggedInUsername) { %>
          <div class="action-buttons">
            <a href="/projects/<%= project.projectId %>/update">
              <button type="button">Edit Project</button>
            </a>
            <a href="/projects/<%= project.projectId %>/delete">
              <button type="button">Delete Project</button>
            </a>
          </div>
        <% } %>
      </div>

      <div class="container">
        <div class="chat-container" data-project-id="<%= project.projectId %>">
          <h2>Project Chat</h2>
          <div id="messages"></div>
          <form id="message-form">
            <select id="receiver-id" required>
              <% collaborators.forEach(collaborator => { %>
                <option value="<%= collaborator.userId %>"><%= collaborator.username %></option>
              <% }); %>
            </select>
            <input id="message" type="text" placeholder="Type your message..." required />
            <button type="submit">Send</button>
          </form>
        </div>
      </div>
      <script>
        document.addEventListener('DOMContentLoaded', (event) => {
          const socket = new WebSocket('ws://localhost:8000');

          const messageForm = document.getElementById('message-form');
          const messagesDiv = document.getElementById('messages');
          const messageInput = document.getElementById('message');
          const receiverIdSelect = document.getElementById('receiver-id');
          const chatContainer = document.querySelector('.chat-container');
          const projectId = chatContainer.getAttribute('data-project-id');

          if (!projectId) {
            console.error('Project ID is not defined');
            return;
          }

          // Function to load messages
          const loadMessages = () => {
            console.log('Loading messages...');
            fetch(`/projects/chat?projectId=${projectId}`)
              .then(response => {
                if (!response.ok) {
                  return response.text().then(text => { throw new Error(text) });
                }
                return response.json();
              })
              .then(data => {
                console.log('Messages loaded:', data.chats);
                if (!data.chats) {
                  console.error('No chats found');
                  return;
                }
                // Clear existing messages on initial load
                messagesDiv.innerHTML = '';
                data.chats.forEach(chat => {
                  appendMessage(chat.senderUsername, chat.lastMessage);
                });
              })
              .catch(error => console.error('Error loading messages:', error));
          };

          // Function to append a message to the chat
          const appendMessage = (username, message) => {
            const messageElement = document.createElement('div');
            messageElement.textContent = `${username}: ${message}`;
            messagesDiv.appendChild(messageElement);
          };

          // Initial load of messages
          loadMessages();

          // Handle form submission
          messageForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const message = {
              message: messageInput.value,
              receiverId: receiverIdSelect.value,
              projectId: projectId,
              username: '<%= loggedInUsername %>' // Make sure this is set correctly
            };

            fetch(`/projects/chat?projectId=${projectId}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(message)
            })
            .then(response => {
              if (!response.ok) {
                return response.text().then(text => { throw new Error(text) });
              }
              return response.json();
            })
            .then(data => {
              console.log('Message sent:', data);
              messageInput.value = '';
              // Send the message to WebSocket
              socket.send(JSON.stringify(message));
            })
            .catch(error => console.error('Error sending message:', error));
          });

          // Listen for new messages from the WebSocket server
          socket.addEventListener('message', (event) => {
            const data = JSON.parse(event.data);
            console.log('New message received:', data);
            appendMessage(data.username, data.message);
          });
        });
      </script>
    </div>
  </div>
</body>
</html>
